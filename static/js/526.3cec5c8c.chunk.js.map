{"version":3,"file":"static/js/526.3cec5c8c.chunk.js","mappings":"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","sources":["components/Admin/adminHome/products/AddProductForm.js","components/Admin/adminHome/products/UpdateProductForm.js","components/Admin/adminHome/products/ProductList.js","components/Admin/spinner/Spinner.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./AddProductForm.css\";\r\n\r\nconst AddProductForm = ({ onProductAdded }) => {\r\n    const [newProduct, setNewProduct] = useState({\r\n        productid: '',\r\n        productCategory: '',\r\n        productType: '',\r\n        productImage: null,\r\n        productVolume: '',\r\n        productPrice: '',\r\n        productDescription: '',\r\n        brandID: ''\r\n    });\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setNewProduct({ ...newProduct, [name]: value });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setNewProduct({ ...newProduct, productImage: e.target.files[0] });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const token = localStorage.getItem('authToken');\r\n        if (!token) {\r\n            setMessage('You are not authenticated. Please log in.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('productid', newProduct.productid);\r\n        formData.append('productCategory', newProduct.productCategory);\r\n        formData.append('productType', newProduct.productType);\r\n        if (newProduct.productImage) {\r\n            formData.append('productImage', newProduct.productImage);\r\n        }\r\n        formData.append('productVolume', newProduct.productVolume);\r\n        formData.append('productPrice', newProduct.productPrice);\r\n        formData.append('productDescription', newProduct.productDescription);\r\n        formData.append('brandID', newProduct.brandID);\r\n\r\n        try {\r\n            const response = await fetch('https://prasad-gz5p.onrender.com/api/products/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': `Token ${token}`,\r\n                },\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to add product');\r\n            }\r\n\r\n            const addedProduct = await response.json();\r\n            onProductAdded(addedProduct);\r\n\r\n            setNewProduct({\r\n                productid: '',\r\n                productCategory: '',\r\n                productType: '',\r\n                productImage: null,\r\n                productVolume: '',\r\n                productPrice: '',\r\n                productDescription: '',\r\n                brandID: ''\r\n            });\r\n\r\n            setMessage('Product added successfully!');\r\n        } catch (err) {\r\n            setMessage(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-product-form-sm69\">\r\n            <h2 className=\"add-product-form-header-sm69\">Add a New Product</h2>\r\n            <form className=\"add-product-form-form-sm69\" onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"add-product-form-input-sm69\"\r\n                    type=\"text\"\r\n                    name=\"productid\"\r\n                    placeholder=\"Product ID\"\r\n                    value={newProduct.productid}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"add-product-form-input-sm69\"\r\n                    type=\"text\"\r\n                    name=\"productCategory\"\r\n                    placeholder=\"Product Category\"\r\n                    value={newProduct.productCategory}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"add-product-form-input-sm69\"\r\n                    type=\"text\"\r\n                    name=\"productType\"\r\n                    placeholder=\"Product Type\"\r\n                    value={newProduct.productType}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input\r\n                    className=\"add-product-form-file-input-sm69\"\r\n                    type=\"file\"\r\n                    name=\"productImage\"\r\n                    accept=\"image/*\"\r\n                    onChange={handleFileChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"add-product-form-input-sm69\"\r\n                    type=\"text\"\r\n                    name=\"productVolume\"\r\n                    placeholder=\"Product Volume\"\r\n                    value={newProduct.productVolume}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"add-product-form-input-sm69\"\r\n                    type=\"number\"\r\n                    name=\"productPrice\"\r\n                    placeholder=\"Product Price\"\r\n                    value={newProduct.productPrice}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <textarea\r\n                    className=\"add-product-form-textarea-sm69\"\r\n                    name=\"productDescription\"\r\n                    placeholder=\"Product Description\"\r\n                    value={newProduct.productDescription}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <input\r\n                    className=\"add-product-form-input-sm69\"\r\n                    type=\"text\"\r\n                    name=\"brandID\"\r\n                    placeholder=\"Brand ID\"\r\n                    value={newProduct.brandID}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                />\r\n                <button className=\"add-product-form-button-sm69\" type=\"submit\">Add Product</button>\r\n            </form>\r\n            {message && <p className=\"add-product-form-message-sm69\">{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddProductForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./UpdateProductForm.css\";\r\n\r\nconst UpdateProductForm = ({ onProductUpdated, currentProduct }) => {\r\n    const [updatedProduct, setUpdatedProduct] = useState({\r\n        productid: '',\r\n        productCategory: '',\r\n        productType: '',\r\n        productImage: '',\r\n        productVolume: '',\r\n        productPrice: '',\r\n        productDescription: '',\r\n        brandID: ''\r\n    });\r\n    const [existingImage, setExistingImage] = useState(''); // Store the current image URL\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (currentProduct) {\r\n            setUpdatedProduct(currentProduct);\r\n            setExistingImage(currentProduct.productImage); // Set existing image\r\n        }\r\n    }, [currentProduct]);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUpdatedProduct({ ...updatedProduct, [name]: value });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        setUpdatedProduct({ ...updatedProduct, productImage: e.target.files[0] });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const token = localStorage.getItem('authToken'); // Retrieve token\r\n   \r\n        const formData = new FormData();\r\n        formData.append('productid', updatedProduct.productid);\r\n        formData.append('productCategory', updatedProduct.productCategory);\r\n        formData.append('productType', updatedProduct.productType);\r\n        formData.append('productVolume', updatedProduct.productVolume);\r\n        formData.append('productPrice', updatedProduct.productPrice);\r\n        formData.append('productDescription', updatedProduct.productDescription);\r\n        formData.append('brandID', updatedProduct.brandID);\r\n   \r\n        // If a new image is uploaded, append it; otherwise, keep the existing image\r\n        if (updatedProduct.productImage) {\r\n            formData.append('productImage', updatedProduct.productImage);\r\n        } else if (existingImage) {\r\n            const response = await fetch(existingImage);\r\n            const blob = await response.blob();\r\n            const file = new File([blob], existingImage.split('/').pop(), { type: 'image/jpeg' }); // Adjust file type if necessary\r\n            formData.append('productImage', file);\r\n        }\r\n   \r\n        try {\r\n            const response = await fetch(`https://prasad-gz5p.onrender.com/api/products/${updatedProduct.productid}/update/`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Authorization': `Token ${token}`, // Add the authorization header\r\n                },\r\n                body: formData,\r\n            });\r\n   \r\n            if (!response.ok) {\r\n                throw new Error('Failed to update product');\r\n            }\r\n   \r\n            const updatedProductData = await response.json();\r\n            onProductUpdated(updatedProductData); // Notify the parent component\r\n            setMessage('Product updated successfully!');\r\n        } catch (err) {\r\n            setMessage(err.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"update-product-formV009\">\r\n            <h2>Update Product</h2>\r\n            <form onSubmit={handleSubmit} className=\"update-product-form-elementV009\">\r\n    <div className=\"input-group\">\r\n        <input\r\n            type=\"text\"\r\n            name=\"productCategory\"\r\n            placeholder=\"Product Category\"\r\n            value={updatedProduct.productCategory}\r\n            onChange={handleInputChange}\r\n            required\r\n            className=\"update-product-inputV009\"\r\n        />\r\n        <input\r\n            type=\"text\"\r\n            name=\"productType\"\r\n            placeholder=\"Product Type\"\r\n            value={updatedProduct.productType}\r\n            onChange={handleInputChange}\r\n            className=\"update-product-inputV009\"\r\n        />\r\n    </div>\r\n    <div className=\"input-group\">\r\n        <input\r\n            type=\"file\"\r\n            name=\"productImage\"\r\n            accept=\"image/*\"\r\n            onChange={handleFileChange}\r\n            className=\"update-product-file-inputV009\"\r\n        />\r\n        {existingImage && (\r\n            <div className=\"current-image-displayV009\">\r\n                <img src={existingImage} alt=\"Current Product\" />\r\n                <div className=\"current-image-checkboxV009\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={!updatedProduct.productImage} // Keep existing image if no new file is selected\r\n                        onChange={() => setUpdatedProduct({ ...updatedProduct, productImage: null })} // Clear new image selection\r\n                    />\r\n                    <span>Use Current Image</span>\r\n                </div>\r\n            </div>\r\n        )}\r\n    </div>\r\n    <div className=\"input-group\">\r\n        <input\r\n            type=\"text\"\r\n            name=\"productVolume\"\r\n            placeholder=\"Product Volume\"\r\n            value={updatedProduct.productVolume}\r\n            onChange={handleInputChange}\r\n            required\r\n            className=\"update-product-inputV009\"\r\n        />\r\n        <input\r\n            type=\"number\"\r\n            name=\"productPrice\"\r\n            placeholder=\"Product Price\"\r\n            value={updatedProduct.productPrice}\r\n            onChange={handleInputChange}\r\n            required\r\n            className=\"update-product-inputV009\"\r\n        />\r\n    </div>\r\n    <textarea\r\n        name=\"productDescription\"\r\n        placeholder=\"Product Description\"\r\n        value={updatedProduct.productDescription}\r\n        onChange={handleInputChange}\r\n        required\r\n        className=\"update-product-textareaV009\"\r\n    />\r\n    <input\r\n        type=\"text\"\r\n        name=\"brandID\"\r\n        placeholder=\"Brand ID\"\r\n        value={updatedProduct.brandID}\r\n        onChange={handleInputChange}\r\n        \r\n        required\r\n        className=\"update-product-inputV009\"\r\n    />\r\n    <button type=\"submit\" className=\"update-product-buttonV009\">Update Product</button>\r\n     </form>\r\n\r\n            {message && <div className=\"update-product-messageV009\">{message}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateProductForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport AddProductForm from './AddProductForm';\r\nimport UpdateProductForm from './UpdateProductForm';\r\nimport './ProductList.css';\r\nimport Spinner from '../../spinner/Spinner';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ProductList = () => {\r\n    const { brandID } = useParams();\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [showAddProductModal, setShowAddProductModal] = useState(false);\r\n    const [showUpdateProductModal, setShowUpdateProductModal] = useState(false);\r\n    const [currentProduct, setCurrentProduct] = useState(null);\r\n    const [notification, setNotification] = useState('');\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const [cardPosition, setCardPosition] = useState({ top: 0, left: 0 });\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n \r\n    const navigate = useNavigate();\r\n\r\n    const fetchProducts = async () => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch('https://prasad-gz5p.onrender.com/api/products/');\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const data = await response.json();\r\n            const filteredProducts = data.filter(product => product.brandID === brandID);\r\n            setProducts(filteredProducts);\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, [brandID]);\r\n\r\n    const handleProductAddedOrUpdated = () => {\r\n        fetchProducts();\r\n        setShowAddProductModal(false);\r\n        setShowUpdateProductModal(false);\r\n        setNotification('Product updated successfully!');\r\n        setTimeout(() => setNotification(''), 3000);\r\n    };\r\n\r\n    const toggleAddProductModal = () => {\r\n        // Close the update modal if it's open\r\n        if (showUpdateProductModal) {\r\n            setShowUpdateProductModal(false);\r\n        }\r\n        setShowAddProductModal(!showAddProductModal);\r\n    };\r\n\r\n    const handleUpdateProduct = (product, event) => {\r\n        event.stopPropagation();\r\n        setCurrentProduct(product);\r\n        // Close the add modal if it's open\r\n        if (showAddProductModal) {\r\n            setShowAddProductModal(false);\r\n        }\r\n        setShowUpdateProductModal(true);\r\n    };\r\n\r\n    const handleCardClick = (product, event) => {\r\n        // const cardRect = event.currentTarget.getBoundingClientRect();\r\n        // setCardPosition({ top: cardRect.top + window.scrollY, left: cardRect.left + window.scrollX });\r\n        setSelectedProduct(product);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setSelectedProduct(null);\r\n    };\r\n\r\n    const handleBackToBrands = () => {\r\n        navigate('/brands');\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        const modal = document.querySelector('.product-modal-contentV025');\r\n        if (modal && !modal.contains(event.target)) {\r\n            handleCloseModal();\r\n        }\r\n    };\r\n \r\n    const handleScroll = () => {\r\n        if (selectedProduct) {\r\n            handleCloseModal();\r\n        }\r\n    };\r\n \r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        document.addEventListener('touchstart', handleClickOutside);\r\n        window.addEventListener('scroll', handleScroll);\r\n \r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n            document.removeEventListener('touchstart', handleClickOutside);\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    const filteredProducts = products.filter(product =>\r\n        (product.productCategory && product.productCategory.toLowerCase().includes(searchTerm.toLowerCase())) ||\r\n        (product.productType && product.productType.toLowerCase().includes(searchTerm.toLowerCase()))||\r\n        (product.productVolume && product.productVolume.toString().includes(searchTerm)) ||\r\n        (product.productPrice && product.productPrice.toString().includes(searchTerm))\r\n       \r\n    );\r\n\r\n    if (loading) {\r\n        return <div className=\"product-list-loadingV025\"><Spinner /></div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"product-list-errorV025\">Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-list-containerV025\">\r\n            {notification && (\r\n                <div className=\"notification-containerV025\" onClick={() => setNotification('')}>\r\n                    {notification}\r\n                </div>\r\n            )}\r\n            <div className='main-containerV025'>\r\n                <div className='title-containerV025'>\r\n                    <button className=\"back-buttonV025\" onClick={handleBackToBrands}>\r\n                        <FontAwesomeIcon icon={faArrowLeft} size=\"2x\" />\r\n                    </button>\r\n                    <h1 className=\"product-list-titleV025\">\r\n                        Product List for Brand {brandID}\r\n                    </h1>\r\n                </div>\r\n                <button className=\"product-list-add-buttonV025\" onClick={toggleAddProductModal}>\r\n                    {showAddProductModal ? 'Close' : 'Add Product'}\r\n                </button>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"search-barV025\"\r\n                />\r\n                {showAddProductModal && (\r\n                    <dialog className=\"product-list-modalV025\" open>\r\n                        <div className=\"product-list-modal-contentV025\">\r\n                            <span className=\"product-list-closeV025\" onClick={toggleAddProductModal}>&times;</span>\r\n                            <AddProductForm onProductAdded={handleProductAddedOrUpdated} />\r\n                        </div>\r\n                    </dialog>\r\n                )}\r\n                {showUpdateProductModal && (\r\n                    <dialog className=\"product-list-modalV025\" open>\r\n                        <div className=\"product-list-modal-contentV025\">\r\n                            <span className=\"product-list-closeV025\" onClick={() => setShowUpdateProductModal(false)}>&times;</span>\r\n                            <UpdateProductForm\r\n                                onProductUpdated={handleProductAddedOrUpdated}\r\n                                currentProduct={currentProduct}\r\n                            />\r\n                        </div>\r\n                    </dialog>\r\n                )}\r\n            </div>\r\n            <div className=\"product-card-containerV025\">\r\n                \r\n            {filteredProducts.map((product) => (\r\n                    <div className=\"cardV025\" key={product.productid} onClick={(event) => handleCardClick(product, event)}>\r\n                        <div className=\"image_containerV025\">\r\n                            <img src={product.productImage} alt={product.productCategory} className=\"imageV025\" loading='lazy' />\r\n                        </div>\r\n                        <h2 className=\"titleV025\">{product.productCategory}</h2>\r\n                        <p className='typeV025'>Type: {product.productType}</p>\r\n                        <p className=\"VolumeV025\">Volume: {product.productVolume}</p>\r\n                        <p className=\"Final_priceV025\">Price: ₹{new Intl.NumberFormat('en-IN').format(product.productPrice)}</p>\r\n                        <button className=\"edit-buttonV025\" onClick={(event) => handleUpdateProduct(product, event)}>\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {selectedProduct && (\r\n                <div className=\"product-modalV025\" style={{ top: cardPosition.top, left: cardPosition.left }}>\r\n                    <div className=\"product-modal-contentV025 small-modalV025\">\r\n                        <span className=\"product-modal-closeV025\" onClick={handleCloseModal}>&times;</span>\r\n                        <h2>{selectedProduct.productCategory}</h2>\r\n                        <img src={selectedProduct.productImage} alt={selectedProduct.productCategory} loading='lazy' />\r\n                        <p>{selectedProduct.productDescription}</p>\r\n                        <p>Volume: {selectedProduct.productVolume}</p>\r\n                        <p>Price: ₹{new Intl.NumberFormat('en-IN').format(selectedProduct.productPrice)}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport './Spinner.css'; // Make sure to import the CSS file\r\n \r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"dot-spinner-container\">\r\n      <div className=\"dot-spinner\">\r\n        {Array.from({ length: 8 }, (_, index) => (\r\n          <div key={index} className={`dot-spinner__dot dot-spinner__dot--${index + 1}`}></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default Spinner;"],"names":["_ref","onProductAdded","newProduct","setNewProduct","useState","productid","productCategory","productType","productImage","productVolume","productPrice","productDescription","brandID","message","setMessage","handleInputChange","e","name","value","target","_jsxs","className","children","_jsx","onSubmit","async","preventDefault","token","localStorage","getItem","formData","FormData","append","response","fetch","method","headers","body","ok","Error","addedProduct","json","err","type","placeholder","onChange","required","accept","files","onProductUpdated","currentProduct","updatedProduct","setUpdatedProduct","existingImage","setExistingImage","useEffect","blob","file","File","split","pop","updatedProductData","src","alt","checked","ProductList","useParams","products","setProducts","loading","setLoading","error","setError","showAddProductModal","setShowAddProductModal","showUpdateProductModal","setShowUpdateProductModal","setCurrentProduct","notification","setNotification","selectedProduct","setSelectedProduct","cardPosition","setCardPosition","top","left","searchTerm","setSearchTerm","navigate","useNavigate","fetchProducts","filteredProducts","filter","product","handleProductAddedOrUpdated","setTimeout","toggleAddProductModal","handleCloseModal","handleClickOutside","event","modal","document","querySelector","contains","handleScroll","addEventListener","window","removeEventListener","toLowerCase","includes","toString","Spinner","onClick","handleBackToBrands","FontAwesomeIcon","icon","faArrowLeft","size","open","AddProductForm","UpdateProductForm","map","handleCardClick","Intl","NumberFormat","format","handleUpdateProduct","stopPropagation","style","Array","from","length","_","index"],"sourceRoot":""}