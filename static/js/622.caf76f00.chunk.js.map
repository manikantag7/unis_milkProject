{"version":3,"file":"static/js/622.caf76f00.chunk.js","mappings":"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","sources":["components/Customer/Supplier/Supplier.js"],"sourcesContent":[" \r\nimport React, { useEffect, useState, useRef, lazy } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Supplier.css';\r\nconst DotSpinner = lazy(() => import('../DotSpinner/DotSpinner'));\r\n \r\nconst Supplier = () => {\r\n  const [supplierData, setSupplierData] = useState([]);\r\n  const [filteredSuppliers, setFilteredSuppliers] = useState([]);\r\n  const [selectedSupplier, setSelectedSupplier] = useState({  mobile_number: '' });\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [products, setProducts] = useState([]);\r\n  const [loadingSupplierData, setLoadingSupplierData] = useState(false);\r\n  const [loadingCustomerProducts, setLoadingCustomerProducts] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [snackbarMessage, setSnackbarMessage] = useState('');\r\n \r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setDropdownOpen(false);\r\n      }\r\n    };\r\n \r\n    document.addEventListener('mousedown', handleClickOutside);\r\n \r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [dropdownRef]);\r\n \r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (!token) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n \r\n    const fetchSupplierData = async () => {\r\n      setLoadingSupplierData(true);\r\n      try {\r\n        const response = await fetch('https://prasad-gz5p.onrender.com/api/get-suppliers/', {\r\n          headers: { 'Authorization': `Token ${token}` },\r\n        });\r\n \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch supplier data`);\r\n        }\r\n \r\n        const data = await response.json();\r\n        // setSupplierData(data);\r\n        // setFilteredSuppliers(data);\r\n        const suppliers = data.suppliers || [];\r\n        setSupplierData(suppliers);\r\n        setFilteredSuppliers(suppliers);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n      finally {\r\n        setLoadingSupplierData(false);\r\n      }\r\n    };\r\n    fetchSupplierData();\r\n  }, [navigate]);\r\n \r\n  useEffect(() => {\r\n    const filtered = supplierData.filter(supplier =>\r\n      supplier.includes(searchQuery) // Search by mobile number\r\n    );\r\n    setFilteredSuppliers(filtered);\r\n  }, [searchQuery, supplierData]);\r\n \r\n  const handleSelectSupplier = (supplier) => {\r\n    setSelectedSupplier({ mobile_number: supplier });\r\n    setDropdownOpen(false);\r\n  };\r\n \r\n  const fetchProducts = async (supplierMobile) => {\r\n    const token = localStorage.getItem('authToken');\r\n    setLoadingCustomerProducts(true);\r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/productslist/?supplier=${supplierMobile}`, {\r\n        headers: { 'Authorization': `Token ${token}` },\r\n      });\r\n \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch products`);\r\n      }\r\n \r\n      const data = await response.json();\r\n      setProducts(data.products);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    finally {\r\n      setLoadingCustomerProducts(false);\r\n    }\r\n  };\r\n \r\n    if (error) {\r\n      return <div className=\"error-message\">Error: {error}</div>;\r\n    }\r\n \r\n  const handleSupplierSubmit = async () => {\r\n    const token = localStorage.getItem('authToken');\r\n \r\n    const payload = {\r\n      supplier_mobile_number: selectedSupplier.mobile_number,\r\n     \r\n    };\r\n \r\n    try {\r\n      const response = await fetch('https://prasad-gz5p.onrender.com/api/select-supplier/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n \r\n      if (!response.ok) {\r\n        setSnackbarMessage('Please Select supplier.');\r\n        setTimeout(() => setSnackbarMessage(''), 3000);\r\n        return;  \r\n      }\r\n \r\n    setSnackbarMessage('Supplier details submitted successfully!');\r\n    setTimeout(() => setSnackbarMessage(''), 3000);\r\n     \r\n      await fetchProducts(selectedSupplier.supplier);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n \r\n  const handleAddToCart = async (productId, quantity, price) => {\r\n    console.log(\"Adding to cart:\", { product_id: productId, quantity, price });\r\n    const frice = parseInt(price);\r\n    const token = localStorage.getItem('authToken');\r\n \r\n    const dataToSubmit = {\r\n      product_id: productId,\r\n      quantity: quantity,\r\n      price: frice\r\n    };\r\n \r\n    try {\r\n      const response = await fetch(`https://prasad-gz5p.onrender.com/api/add-to-cart/${productId}/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Token ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(dataToSubmit),\r\n      });\r\n \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to add to cart: ${response.statusText}`);\r\n      }\r\n      setSnackbarMessage('Product added to cart successfully!');\r\n      setTimeout(() => setSnackbarMessage(''), 3000);\r\n     \r\n    } catch (error) {\r\n      alert('Error: ' + error.message);\r\n    }\r\n  };\r\n \r\n  const handleQuantityChange = (productId, change) => {\r\n    const quantityInput = document.getElementById(`quantity-${productId}`);\r\n    let currentQuantity = parseInt(quantityInput.value) || 1;\r\n    currentQuantity += change;\r\n    if (currentQuantity < 1) {\r\n        currentQuantity = 1;\r\n    }\r\n    quantityInput.value = currentQuantity;\r\n  };\r\n \r\nconst handleResetSelection1 = () => {\r\n  setSelectedSupplier({mobile_number: '' });\r\n  setProducts([]);\r\n};\r\nreturn (\r\n  <div className=\"supplier-home21\">\r\n    {error && <p className=\"error-message21\">{error}</p>}\r\n    {snackbarMessage && (\r\n        <div className=\"snackbar show\">\r\n          {snackbarMessage}\r\n        </div>\r\n      )}\r\n    <h2 className='sup-head'>Suppliers</h2>\r\n    <div className=\"supplier-section21\">\r\n        <div className=\"dropdown21\" ref={dropdownRef}>\r\n            <button onClick={() => setDropdownOpen(!dropdownOpen)} className=\"dropdown-toggle21\">\r\n                {selectedSupplier.mobile_number\r\n                ? `${selectedSupplier.mobile_number}`\r\n                : 'Select a Supplier'}\r\n                {selectedSupplier.name && (\r\n                    <span className=\"crossmark21\" onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleResetSelection1(e); }}>\r\n                    &times;\r\n                    </span>\r\n                )}\r\n            </button>\r\n            {dropdownOpen && (\r\n                <div className=\"dropdown-menu21\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by name or mobile number\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    className=\"search-input21\"\r\n                />\r\n                <div className=\"supplier-list-container21\">\r\n                    {loadingSupplierData ? (\r\n                    <div style={{display: 'flex', justifyContent:'center', alignItems:'center',\r\n                        height: '10vh' }}>\r\n                        {/* <DotSpinner /> */}\r\n                        <div className=\"loader21\">Loading Suppliers...</div>\r\n                       </div>\r\n                    ) : (\r\n                    <ul className=\"supplier-list21\">\r\n                        {filteredSuppliers.length ? (\r\n                        filteredSuppliers.map((supplier, index) => (\r\n                          <li key={index} onClick={() => handleSelectSupplier(supplier)}>\r\n                          {supplier}\r\n                        </li>\r\n                        ))\r\n                        ) : (\r\n                        <p className=\"no-suppliers21\">No suppliers found</p>\r\n                        )}\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n \r\n        <button onClick={handleSupplierSubmit} className=\"btn-submit21\">\r\n        Submit Supplier\r\n      </button>\r\n    </div>\r\n \r\n    {!selectedSupplier.mobile_number && (\r\n        <div className='n0-selected21'>\r\n          <p>No Supplier Selected</p>\r\n        </div>\r\n      )}\r\n      \r\n        {loadingCustomerProducts ? (\r\n          <div style={{display: 'flex', justifyContent:'center', alignItems:'center',\r\n            height: '50vh' }}>\r\n              <DotSpinner />\r\n              {/* <p>loading....</p> */}\r\n          </div>\r\n        ) :products.length > 0 && (\r\n          <div className=\"product-card-container21\">\r\n            {products.map((product, index) => (\r\n              <div key={index} className=\"card21\">\r\n                <div className=\"image_container21\">\r\n                  <img src={product.image_url} alt={product.description} className=\"image21\" loading='lazy' />\r\n                </div>\r\n                <div className=\"bottom-section21\">\r\n                  <div className=\"title21\">\r\n                    <p><span>{product.category}</span></p>\r\n                  </div>\r\n                  {/* <div className=\"description21\">\r\n                    <p>{product.description}</p>\r\n                  </div> */}\r\n                  <div className=\"volume21\">\r\n                    <span className=\"qty\">Volume: <span className=\"volume-value21\">{product.volume}</span></span>\r\n                  </div>\r\n                  <div className=\"quantity21\">\r\n                    <span className=\"qty\">Quantity</span>\r\n                    <button className=\"volume-button21\" onClick={() => handleQuantityChange(product.id, -1)}>-</button>\r\n                    <input\r\n                      type=\"number\"\r\n                      min=\"1\"\r\n                      defaultValue=\"1\"\r\n                      className=\"inputBox21\"\r\n                      id={`quantity-${product.id}`}\r\n                    />\r\n                    <button className=\"volume-button21\" onClick={() => handleQuantityChange(product.id, 1)}>+</button>\r\n                  </div>\r\n                  <div className=\"action21\">\r\n                    <div className=\"price21\">\r\n                      <span>₹{product.Final_Price}</span>\r\n                    </div>\r\n                    <button className=\"cart-button21\" onClick={() => {\r\n                      const quantity = parseInt(document.getElementById(`quantity-${product.id}`).value) || 1;\r\n                      handleAddToCart(product.id, quantity, product.Final_Price);\r\n                    }}>\r\n                      <svg className=\"cart-icon21\" stroke=\"currentColor\" strokeWidth=\"1.5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z\" strokeLinejoin=\"round\" strokeLinecap=\"round\"></path>\r\n                      </svg>\r\n                      <span>Add to cart</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n  </div>\r\n);\r\n}\r\nexport default Supplier;"],"names":["DotSpinner","lazy","Supplier","supplierData","setSupplierData","useState","filteredSuppliers","setFilteredSuppliers","selectedSupplier","setSelectedSupplier","mobile_number","error","setError","searchQuery","setSearchQuery","dropdownOpen","setDropdownOpen","products","setProducts","loadingSupplierData","setLoadingSupplierData","loadingCustomerProducts","setLoadingCustomerProducts","dropdownRef","useRef","navigate","useNavigate","snackbarMessage","setSnackbarMessage","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","token","localStorage","getItem","async","response","fetch","headers","ok","Error","suppliers","json","message","fetchSupplierData","filtered","filter","supplier","includes","_jsxs","className","children","handleQuantityChange","productId","change","quantityInput","getElementById","currentQuantity","parseInt","value","_jsx","ref","onClick","name","e","stopPropagation","type","placeholder","onChange","style","display","justifyContent","alignItems","height","length","map","index","handleSelectSupplier","payload","supplier_mobile_number","method","body","JSON","stringify","setTimeout","supplierMobile","data","fetchProducts","product","src","image_url","alt","description","loading","category","volume","id","min","defaultValue","Final_Price","quantity","price","console","log","product_id","frice","dataToSubmit","statusText","alert","handleAddToCart","stroke","strokeWidth","viewBox","fill","xmlns","d","strokeLinejoin","strokeLinecap"],"sourceRoot":""}